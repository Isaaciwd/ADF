name: Pull Request (PR) open and sync workflow

on:
  pull_request:
   types: [opened, synchronize, reopened]

jobs:
  #This job is designed to run all python unit tests whenever
  #a PR is either opened or synced (i.e. additional commits are pushed
  #to branch involved in PR).
  python_unit_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        #All of these python versions will be used to run tests:
        python-version: [3.6, 3.7, 3.8, 3.9]
      fail-fast: false
    steps:
    # Acquire github action routines:
    - uses: actions/checkout@v2
    # Acquire specific version of python:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    # Install needed python packages:
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip  # Install latest version of PIP
        pip install pyyaml                   # Install PyYAML python package
    # Run python unit tests related to ADF library:
    - name: ADF lib unit tests
      run: |
        #AdfBase unit tests:
        python lib/test/unit_tests/test_adf_base.py
        #AdfConfig unit tests:
        python lib/test/unit_tests/test_adf_config.py

#####

  #This job is designed to run tests on all source-code files
  #modified by the Pull Request (PR).  This is done by running
  #a top-level python script which collects all modified files,
  #and then passes those files off to additional scripts
  #to run the actual tests.
  source_code_tests:
    runs-on: ubuntu-latest
    steps:
    # acquire github action routines
    - uses: actions/checkout@v2
    # acquire specific version of python
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: '3.8' # Use python 3.8
    # install required python packages
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip  # Install latest version of PIP
        pip install PyGithub                 # Install PyGithub python package
        pip install pylint                   # Install Pylint python package
        pip install pyyaml                   # Install PyYAML python package
    # run CAM source code testing master script:
    - name: source-code testing python script
      env:
        PR_NUMBER: ${{ github.event.number }}
        ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: .github/scripts/pr_mod_file_tests.py --access_token $ACCESS_TOKEN --pr_num $PR_NUMBER --rcfile lib/test/pylintrc --pylint_level 9.5

