#!/usr/bin/env python3

"""
script: run_adf_diag

goal:  To allow a user to easily run the CAM diagnostics package from
       the command line.

Inputs:  The CAM diagnostics config file (in YAML format).  If the file is
         located in a different directory then the system path must also be
         included.

Any problems or issues with this script should be posted on the
DiscussCESM CAM forum located online here:

https://xenforo.cgd.ucar.edu/cesm/forums/cam.133/

Please note that registration may be required before a message can
be posted.  However, feel free to search the forums for similar issues
(and possible solutions) without needing to register or sign in.

Good luck, and may all your plots be helpful!
"""

#++++++++++++++++++++++++++++++
#Import standard python modules
#++++++++++++++++++++++++++++++

import os.path
import sys
import argparse

#+++++++++++++++++++++++++++++
#Import ADF diagnostics module
#+++++++++++++++++++++++++++++

#Determine local directory path:
_LOCAL_PATH = os.path.dirname(os.path.abspath(__file__))

#Add lib directory to path:
_DIAG_LIB_PATH = os.path.join(_LOCAL_PATH,"lib")

#Check that path actually exists:
if os.path.isdir(_DIAG_LIB_PATH):
    #If true, then add to Python path:
    sys.path.append(_DIAG_LIB_PATH)
else:
    #If not, then raise error:
    raise FileNotFoundError("'./lib' directory not found. Has 'run_diag' been moved?")

#Import ADF diagnostics object:
from AdfDiag import AdfDiag

#Import ADF diagnostics error classt:
from AdfBase import AdfError

#################
#Helper functions
#################

#++++++++++++++++++++++++++++++
#Input argument parser function
#++++++++++++++++++++++++++++++

def parse_arguments():

    """
    Parses command-line input arguments using the argparse
    python module and outputs the final argument object.
    """

    #Create parser object:
    parser = argparse.ArgumentParser(description='Command-line wrapper to run the CAM diagnostics package.')

    #Add input arguments to be parsed:
    #--------------------------------

    #Config file:
    parser.add_argument('configure_file', nargs='?', action='store', type=str,
                        help="YAML file used to configure CAM diagnostics.")

    #Flag method to point to config file.  Will be removed at some point in the future.
    parser.add_argument('--config-file', '--config_file', metavar='<DIAG_YAML_FILE>', action='store', type=str,
                        help="YAML file used to configure CAM diagnostics (deprecated).")

    #Debug setting:
    parser.add_argument('--debug', action='store_true', help="Turn on debug output.")

    #--------------------------------

    #Parse Argument inputs
    args = parser.parse_args()

    #If no onfig file argument is present, then throw an error:
    if (not args.configure_file) and (not args.config_file):
        emsg = "No Config file found, please run 'run_diag <DIAG_YAML_FILE>'.\n"
        emsg +="Where <DIAG_YAML_FILE> is the name of the yaml file used to configure"
        emsg +="the diagnostics package."
        parser.error(emsg)

    return args

############################
#Main CAM diagnostics script
############################

#Run code below if command is called
#directly from the command line:
if __name__ == "__main__":

    #+++++++++++++++++++++
    #Begin ADF diag script
    #+++++++++++++++++++++
    print('ADF diagnostics is starting...')

    #+++++++++++++++++++++++++++++++++++++++++++
    #Check that python is version 3.6 or greater
    #+++++++++++++++++++++++++++++++++++++++++++

    if sys.version_info[0] < 3:
        raise AdfError("Script only works with Python 3. Please switch python versions.")

    if sys.version_info[1] < 6:
        raise AdfError("Script only works with Python version 3.6 or greater.  Please update python.")

    #++++++++++++++++++++++++++++
    #Parse command-line arguments
    #++++++++++++++++++++++++++++

    args = parse_arguments()

    #Extract YAML config file name/path:
    if args.configure_file:
      config_yaml = args.configure_file
    else:
      config_yaml = args.config_file

    #Extract debug flag:
    config_debug = args.debug

    #+++++++++++++++++++++++++++++++++
    #Call main ADF diagnostics methods
    #+++++++++++++++++++++++++++++++++

    #Initalize CAM diagnostics object:
    diag = AdfDiag(config_yaml, debug=config_debug)

    #Create model time series:
    diag.create_time_series()

    #Create model baseline time series (if needed):
    if not diag.compare_obs:
        diag.create_time_series(baseline=True)

    #Create model climatology (climo) files.
    #This call uses the "time_averaging_script" specified
    #in the config file:
    diag.create_climo()

    #Create model baseline climatology files (if needed).
    #This call uses the "time_averaging_script" specified
    #in the config file:
    if not diag.compare_obs:
        diag.create_climo(baseline=True)

    #Regrid model climatology files to match either
    #observations or CAM baseline climatologies:
    diag.regrid_climo()

    #Perform analyses:
    diag.perform_analyses()

    #If baseline is present, then peform analyses on it as well:
    if not diag.compare_obs:
        diag.perform_analyses(baseline=True)

    #Create plots:
    diag.create_plots()

    #Create website:
    if diag.create_html:
        diag.create_webpage()

    #+++++++++++++++
    #End diag script
    #+++++++++++++++
    print('ADF diagnostics has completed successfully.')
    sys.exit(0)
